<%= stylesheet_link_tag 'auth' %>

<%= render "devise/shared/error_messages", resource: resource %>
<div class="container-md d-flex justify-content-center rounded">

<div class="row">
  <div class="col-12 text-center mt-3">

  <%= image_tag "logo.png", alt: "My Logo", class: "logo", width: "100", height: "100" %>

    <h2>Sign up</h2>
  </div>



  <%= form_for(resource, as: resource_name, url: registration_path(resource_name), autocomplete: "off"  ) do |f| %>

    <div class="row">
      <div class="col">
        <div class="field">
          <p><%= f.label :name , class: "form-label" %></p>
          <p><%= f.text_field :name, autofocus: true, autocomplete: "name" , class: "form-control" %></p>
        </div>

    
        <div class="field">
          <p><%= f.label :email , class: "form-label" %></p>
          <p><%= f.email_field :email, autofocus: true, autocomplete: "email" , class: "form-control" %></p>
        </div>
        
        <div class="field">
          <p><%= f.label :password , class: "form-label" %></p>
          <p><%= f.password_field :password, autocomplete: "new-password" , class: "form-control" %></p>
        </div>
      </div>

      <div class="col">

            <div class="field">
          <p><%= f.label :address , class: "form-label" %></p>
          <p><%= f.text_field :address, autofocus: true, autocomplete: "address" , class: "form-control" %></p>
        </div>
       <div class="field">
          <p><%= f.label :phone , class: "form-label" %></p>
          <p><%= f.phone_field :phone, autofocus: true, autocomplete: "phone" , class: "form-control" %></p>
        </div>

        <div class="field">
          <p><%= f.label :password_confirmation , class: "form-label" %></p>
          <p><%= f.password_field :password_confirmation, autocomplete: "new-password" , class: "form-control"%></p>
          
        </div>
      </div>
      </div>
    <div class="row">
      <div class="col">
        <div id="passwordHelpInline" class="form-text bg-secondary rounded p-3" hidden = true>

          </div>
      </div>
    </div>
    <div class="row">
      <div class="col text-center">
        <div class="actions">
          <p>

              By clicking "Register" you agree to our <%= link_to 'privacy policy', "/privacy-policy" %>.
          </p>
          
          <%= f.submit "Sign up" , id: "enable" , disabled: true , class: "btn btn-dark mb-3" , data: { turbo: false }%>

          <%= render "devise/shared/links" %>

        </div>
      </div>
    </div>
    </div>
  <% end %>

</div>

</div>


<script>

/*
  config.password_regex = /(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[^a-zA-Z\d]).+/
  config.password_complexity = { message: "debe contener al menos una letra minúscula, una letra mayúscula, un número y un carácter especial (que no sea letra ni número)" }

  # Validación adicional para evitar números consecutivos y letras consecutivas
  validate :password_no_consecutive_characters

  private

  def password_no_consecutive_characters
    if password.match?(/(.)\1{2}/)
      errors.add(:password, "no puede contener caracteres consecutivos repetidos")
    elsif password.match?(/([a-zA-Z])\1{1}/)
      errors.add(:password, "no puede contener letras consecutivas")
    end
  end

*/
  document.addEventListener('DOMContentLoaded', function() {
    const passwordField = document.querySelector('#user_password');
    const enablebutton = document.querySelector('#enable');
    const passwordStrength = document.querySelector('#passwordHelpInline');
    const passwordConfirmation = document.querySelector('#user_password_confirmation');

    passwordField.addEventListener('input', function() {
      const password = this.value;
      const actions = [];

      // Verificar la fortaleza de la contraseña
      if (password.length < 8) {
        actions.push("More than 8 charecters.");
      }
      if (!/[A-Z]/.test(password)) {
        actions.push('More than 1 mayus.');
      }
      if (!/[a-z]/.test(password)) {
        actions.push(' More than 1 minus.');
      }
      if (!/[0-9]/.test(password)) {
        actions.push('More than 1 num.');
      }
      if (!/[^a-zA-Z\d]/.test(password)) {
        actions.push('More than 1 special character (not letters or numbers).');
      }
      // Validación para evitar números consecutivos
      if (/(\d)\1\1|012|123|234|345|456|567|678|789|890|901|098|987|876|765|654|543|432|321|210|109/.test(password)) {
          actions.push('No consecutive numbers.');
      }

      // Validación para evitar letras consecutivas
      if (/(abc|bcd|cde|def|efg|fgh|ghi|hij|ijk|jkl|klm|lmn|mno|nop|opq|pqr|qrs|rst|stu|tuv|uvw|vwx|wxy|xyz|ABC|BCD|CDE|DEF|EFG|FGH|GHI|HIJ|IJK|JKL|KLM|LMN|MNO|NOP|OPQ|PQR|QRS|RST|STU|TUV|UVW|VWX|WXY|XYZ)/.test(password)) {
          actions.push('No consecutive letters.');
      }

      if (checkPass(password, passwordConfirmation.value)) {
        actions.push('Passwords must match');
      }

      // Mostrar las acciones que faltan realizar en la contraseña
      if (actions.length > 0) {
         passwordStrength.hidden = false;

        passwordStrength.innerHTML = actions.map(action => `<p class="text-danger">${action}</p>`).join('');

        enablebutton.disabled = true;
      }else {
        passwordStrength.hidden = true;

        enablebutton.disabled = false;
        passwordStrength.innerHTML = '';
      }
    });

     passwordConfirmation.addEventListener('input', function() {
        const passwordConfirm = this.value;
        const password = passwordField.value;
        const actions = [];
        if (checkPass(password, passwordConfirmation.value)) {
          actions.push('Passwords must match');
        }

        // Mostrar las acciones que faltan realizar en la contraseña
        if (actions.length > 0) {
          passwordStrength.hidden = false;
          
          passwordStrength.innerHTML = actions.map(action => `<p class="text-danger">${action}</p>`).join('');
        

          //passwordStrength.innerHTML = actions.map(action => `<p class="text-danger">${action}</p>`).join('');
          enablebutton.disabled = true;

        } else {
          passwordStrength.hidden = true;
          enablebutton.disabled = false;
          passwordStrength.innerHTML = '';
        }
     });

    function checkPass(pass, confirmPass){
      if (pass != confirmPass) {
        console.log(`no ${pass} ${confirmPass}`);
        return 1
      }
      else{
        return 0
      }
    }

  });
</script>
